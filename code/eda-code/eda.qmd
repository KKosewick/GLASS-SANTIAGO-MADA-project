---
title: "An example exploratory analysis script"
author: "Andreas Handel"
date: "10/28/2021"
output: html_document
---

  
  
This Quarto file loads the cleaned data and does some exploring.

I'm only showing it the way where the code is included in the file. 
As described in the `processing_code` materials, I currently prefer the approach of having R code in a separate file and pulling it in.

But I already had this written and haven't yet re-done it that way. Feel free to redo and send a pull request on GitHub :)

Again, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files.
And sometimes, an R script with enough comments is good enough and one doesn't need a Quarto file.

Also note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you'll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.

As part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.

Start by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables. 

Plots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.

# Setup

```{r}
#load needed packages. make sure they are installed.
library(here) #for data loading/saving
library(dplyr)
library(skimr)
library(ggplot2)
```


Load the data.

```{r}
#Path to data
data_location <- here("data","processed-data","processeddata.rds")
#load data
mydata <- readRDS(data_location)
```


explore how many people use each method
explore how many countries are in each category for each method using new factor variable
explore percentage of unintended pregnancies across methods


# Data exploration through tables
We will begin with creating a summary table of our cleaned variables using the skim()function. This provides information 

```{r}
summary_df = skim(mydata)
print(summary_df)
# save to file
summarytable_file = here("results", "tables", "summarytable.rds")
saveRDS(summary_df, file = summarytable_file)
```

# Data exploration through figures

We will make histogram plots for the continuous outcomes in our dataset.

Percent of unintended pregnancies is the main outcome of interest, so we will explore this variable first. 

```{r}
p1 <- mydata %>% ggplot(aes(x=pct_upreg)) + geom_histogram() 
plot(p1)
figure_file = here("results", "figures", "exploratory-figures", "pctupreg_distribution.png")
ggsave(filename = figure_file, plot=p1) 
```

It is important to consider the type of birth control methods associated with percent of unintended pregnancies as well. We will create a histogram for the `pct_upreg_larcster`, `pct_upreg_sarc`, `pct_upreg_trad`, and `pct_upreg_nouse`.  

```{r}
p2 <- mydata %>% ggplot(aes(x=pct_upreg_larcster)) + geom_histogram() 
plot(p2)
figure_file = here("results", "figures", "exploratory-figures", "pctupreg_larcster_distribution.png")
ggsave(filename = figure_file, plot=p2) 

p3 <- mydata %>% ggplot(aes(x=pct_upreg_sarc)) + geom_histogram() 
plot(p3)
figure_file = here("results", "figures", "exploratory-figures", "pctupreg_sarc_distribution.png")
ggsave(filename = figure_file, plot=p3) 

p4 <- mydata %>% ggplot(aes(x=pct_upreg_trad)) + geom_histogram() 
plot(p4)
figure_file = here("results", "figures", "exploratory-figures", "pctupreg_trad_distribution.png")
ggsave(filename = figure_file, plot=p4) 

p5 <- mydata %>% ggplot(aes(x=pct_upreg_nouse)) + geom_histogram() 
plot(p5)
figure_file = here("results", "figures", "exploratory-figures", "pctupreg_nouse_distribution.png")
ggsave(filename = figure_file, plot=p5) 
```

We will now explore the new 
plots 6-10


We will start exploring how many women use each type of birth control compared to the percent of unintended pregnancies related to that birth control. Plot 11 shows `pct_upreg_larcster` vs `total_larcster` to analyze women using long acting reversible methods and sterilization versus the percentage of unintended pregnancies using those methods. 

```{r}
p11 <- mydata %>% ggplot(aes(x=pct_upreg_larcster, y=total_larcster)) + geom_point() + geom_smooth(method='lm')
plot(p11)
figure_file = here("results","height_weight.png")
ggsave(filename = figure_file, plot=p3) 
```

Once more height as function of weight, stratified by gender. Note that there is so little data, it's a bit silly. But we'll plot it anyway.

```{r}
p4 <- mydata %>% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')
plot(p4)
figure_file = here("results","height_weight_stratified.png")
ggsave(filename = figure_file, plot=p4) 
```

Our next group of plots will be violin plots to explore the usage level of birth associated with percentage of unintended pregnancies use for each birth control method. 
```{r}
p16 <- mydata %>% ggplot(aes(x=larcster_usage, y=pct_upreg_larcster))
```

Our last plots will be mosaic plots to compare two categorical variables: region and usage for each type of birth control. 
```{r}
library(ggmosaic)
p17 <- mydata %>% ggplot(aes(x=region, y=larcster_usage, fill = freq)) + geom_mosaic(aes(x=region, fill = larcster_usage))
```

# Notes

For your own explorations, tables and figures can be "quick and dirty". As long as you can see what's going on, there is no need to polish them. That's in contrast to figures you'll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible.


